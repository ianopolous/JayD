66 0f 3a 0f da 01 -> invalid != palignr xmm3,xmm2,0x1
66 0f 38 17 c1 -> invalid != ptest xmm0,xmm1
66 0f 3a 63 ca 1a -> invalid != pcmpistri xmm1,xmm2,0x1a
66 0f 38 00 c8 -> invalid != pshufb xmm1,xmm0
66 0f 3a 20 16 00 -> invalid != pinsrb xmm2,BYTE PTR [esi],0x0
64 36 12 00 -> adc al,BYTE PTR ss:[eax] != fs adc al,BYTE PTR ss:fs:[eax]
f3 0f b8 c9 -> rep repe invalid != popcnt ecx,ecx
64 36 12 00 -> adc al,BYTE PTR ss:[eax] != fs adc al,BYTE PTR ss:fs:[eax]
66 6b c7 d3 -> imul ax,di,0xffd3 != imul ax,di,0xffffffd3
0f b4 55 ee -> lfs edx,[ebp-0x12] != lfs edx,FWORD PTR [ebp-0x12]
0f ae 0e -> invalid != fxrstor [esi]
2e 64 6b 00 2b -> imul eax,DWORD PTR fs:[eax],0x2b != cs imul eax,cs:fs:[eax],0x2b
f2 f3 f4 -> rep repe repne hlt != repnz repz hlt
0f 0f 0f 8e -> invalid != pfpnacc mm1,QWORD PTR [edi]
64 64 69 74 69 6f 6e 61 6c 20 -> imul esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x206c616e != fs imul esi,fs:[ecx+ebp*2+0x6f],0x206c616e
3e 2e 0a 00 -> or al,BYTE PTR cs:[eax] != ds or al,BYTE PTR cs:ds:[eax]
f3 dc 0c 08 -> rep repe fmul QWORD PTR [eax+ecx] != repz fmul QWORD PTR [eax+ecx]
0f d8 95 d5 6e 71 b2 -> psubusb mm2,[ebp-0x4d8e912b] != psubusb mm2,QWORD PTR [ebp-0x4d8e912b]
f2 3d d7 d0 89 fa -> repne cmp eax,0xfa89d0d7 != repnz cmp eax,0xfa89d0d7
0f 69 6e 69 -> punpckhwd mm5,[esi+0x69] != punpckhwd mm5,QWORD PTR [esi+0x69]
f3 33 f8 -> rep repe xor edi,eax != repz xor edi,eax
f3 31 f8 -> rep repe xor eax,edi != repz xor eax,edi
f2 18 f8 -> repne sbb al,bh != repnz sbb al,bh
f3 1a f8 -> rep repe sbb bh,al != repz sbb bh,al
f3 f8 -> rep repe clc != repz clc
f2 9f -> repne lahf != repnz lahf
f2 fd -> repne std != repnz std
0f b2 92 d4 08 4a c3 -> lss edx,[edx-0x3cb5f72c] != lss edx,FWORD PTR [edx-0x3cb5f72c]
f3 92 -> rep repe xchg edx,eax != repz xchg edx,eax
f2 71 a7 -> repne jno 0x80486f6 != repnz jno 80486f6
64 3e 0a 20 -> or ah,BYTE PTR ds:[eax] != fs or ah,BYTE PTR ds:fs:[eax]
65 3e 0a 20 -> or ah,BYTE PTR ds:[eax] != or ah,BYTE PTR ds:gs:[eax]
0f 01 1b -> lidt [ebx] != lidtd [ebx]
0f 18 19 -> prefetcht2 [ecx] != prefetcht2 BYTE PTR [ecx]
f3 81 0c 00 94 82 0c 00 -> rep repe or DWORD PTR [eax+eax],0xc8294 != repz or [eax+eax],0xc8294
66 83 7f 38 ff -> cmp WORD PTR [edi+0x38],0xffff != cmp WORD PTR [edi+0x38],0xffffffff
66 83 fa ff -> cmp dx,0xffff != cmp dx,0xffffffff
